ID;Description;Source;Target;Condition;Mitigation
AA01;Dataflow not authenticated;;Dataflow;target.authenticatedWith is False;
HA01;Server not hardened;;Server;target.isHardened is False;
AU01;Logs created: verify if sensitive data is stored;;Datastore;target.storesLogData is True;
AU02;Potential weak protections for audit data;;Datastore;target.storesLogData is True and target.isEncrypted is False;
AC01;Process Memory Tampered;Process;Process;target.codeType == 'unmanaged';
AC02;Replay Attacks;Process;Dataflow;target.implementsCommunicationProtocol is True and target.implementsNonce is False;
CR01;Collision Attacks;Process;Process;target.implementsCommunicationProtocol is True;
AU03;Risks from logging;Process;Datastore;target.storesLogData is True;
AA02;Authenticated Data Flow Compromised;Process, Datastore, Element, Actor;Process, Datastore, Server;target.providesConfidentiality is False and target.providesIntegrity is False and target.authenticatesSource is True or target.authenticatesDestination is True;
IN01;Potential SQL Injection Vulnerability;Process;Datastore;target.isSQL is True;
IN02;XML DTD and XSLT Processing;Process, Datastore, Element;Process;target.dataType == 'XML';
IN03;JavaScript Object Notation Processing/XSS;Process, Datastore, Element;Process;target.dataType == 'JSON';
IN04;Cross Site Scripting;Process, Datastore, Element;Server;target.sanitizesInput is False and target.encodesOutput is False;
AC03;The Data Store Could Be Corrupted;Process, Element;Datastore;target.isShared is True or target.hasWriteAccess is True;
AA03;Weakness in SSO Authorization;Process, Element;Process, Server;target.implementsAuthenticationScheme is False;
AC04;Elevation Using Impersonation;Process, Element;Process, Server;target.hasAccessControl is False;
AC05;Elevation by Changing the Execution Flow in a process;Process, Element, Datastore;Process;target.tracksExecutionFlow is False or target.hasAccessControl is False;
OT01;Cross Site Request Forgery;Element;Process, Server;target.implementsCSRFToken is False;
DO01;Potential Excessive Resource Consumption;Element;Process, Server;target.handlesResourceConsumption is False;
DO02;Potential Process Crash or Stop;Process, Datastore, Element;Process;target.handlesCrashes is False;
DO03;Data Flow Is Potentially Interrupted;Process, Datastore, Element;Process, Datastore;target.handlesInterruptions is False;
DO04;Data Store Inaccessible;Process, Element;Datastore;target.isResilient is False;
AA04;Authorization Bypass;Element;Process, Datastore;target.authorizesSource is False;
DE01;Data Flow Sniffing;Process, Element, Datastore;Dataflow;target.protocol == 'HTTP' and target.isEncrypted is False;
AC06;Weak Access Control for a Resource;Process, Datastore, Element;Process, Datastore;target.hasAccessControl is False;
DS01;Weak Credential Storage;Process, Element;Datastore;target.storesPII is True or target.storesSensitiveData is True and (target.isEncrypted is False or target.providesConfidentiality is False or target.providesIntegrity is False;
DE02;Weak Credential Transit;Process, Datastore, Element;Dataflow;target.authenticatedWith is False and target.protocol == 'HTTP';
AA05;Weak Authentication Scheme;Process, Element;Process, Datastore, Server;target.authenticationScheme in ('Basic', 'BASIC');
LB01;Lambda does not authenticate source of request;Process, Element;Lambda;target.authenticatesSource is False;
LB02;Lambda has no access control;Process, Element;Lambda;target.hasAccessControl is False;
LB03;Lambda does not handle resource consumption;Process, Element;Lambda;target.handlesResourceConsumption is False;
